{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\src\\\\components\\\\gameComponents\\\\game.js\";\nimport React from 'react';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game() {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this));\n\n    _this.calculateWinner = function () {\n      var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < lines.length; i++) {\n        var _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return {\n            sign: squares[a],\n            line: lines[i]\n          };\n        }\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history;\n      var newest = history[history.length - 1];\n      var newestSquares = newest.squares.slice();\n\n      if (calculateWinner(newestSquares) || newestSquares[i]) {\n        return;\n      }\n\n      var current = history[this.state.stepNumber];\n      var squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      var sign = this.state.xIsNext ? 'X' : '0';\n      squares[i] = sign;\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          selected: {\n            row: i % 3 + 1,\n            col: Math.floor(i / 3) + 1,\n            sign: sign\n          }\n        }]),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length\n      });\n    }\n  }, {\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 ? false : true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history;\n      var stepNumber = this.state.stepNumber;\n      var current = history[this.state.stepNumber];\n      var winner = calculateWinner(current.squares);\n      var status;\n      var winningLine;\n\n      if (winner) {\n        status = 'Winner: ' + winner.sign;\n        winningLine = winner.line;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\n      }\n\n      var moves = history.map(function (step, move) {\n        var desc = move ? 'Move ' + step.selected.sign + ' (' + step.selected.row + ',' + step.selected.col + ')' : 'Game start';\n        var currentlySelected = move == stepNumber;\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick() {\n            return _this2.jumpTo(move);\n          },\n          className: currentlySelected ? 'selectedMove' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, desc));\n      });\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        winningLine: winningLine,\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, moves));\n    }\n  }]);\n\n  return Game;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\qhunain\\Documents\\demo\\my-app\\src\\components\\gameComponents\\game.js"],"names":["React","Game","calculateWinner","lines","i","length","a","b","c","squares","sign","line","state","history","Array","fill","xIsNext","stepNumber","newest","newestSquares","slice","current","setState","concat","selected","row","col","Math","floor","step","winner","status","winningLine","moves","map","move","desc","currentlySelected","jumpTo","handleClick","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACF,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UAoDdC,eApDc,GAoDI,YAClB;AACI,UAAMC,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAUE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAA,sCACnBD,KAAK,CAACC,CAAD,CADc;AAAA,YAC9BE,CAD8B;AAAA,YAC3BC,CAD2B;AAAA,YACxBC,CADwB;;AAErC,YAAIC,OAAO,CAACH,CAAD,CAAP,IAAcG,OAAO,CAACH,CAAD,CAAP,KAAeG,OAAO,CAACF,CAAD,CAApC,IAA2CE,OAAO,CAACH,CAAD,CAAP,KAAeG,OAAO,CAACD,CAAD,CAArE,EAA0E;AACxE,iBAAO;AACLE,YAAAA,IAAI,EAAED,OAAO,CAACH,CAAD,CADR;AAELK,YAAAA,IAAI,EAAER,KAAK,CAACC,CAAD;AAFN,WAAP;AAID;AACF;;AACD,aAAO,IAAP;AACL,KA1Ea;;AAEZ,UAAKQ,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC;AACRJ,QAAAA,OAAO,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADE;AAIXC,MAAAA,OAAO,EAAE,IAJE;AAKXC,MAAAA,UAAU,EAAE;AALD,KAAb;AAFY;AASb;;;;gCACWb,C,EAAG;AAEb,UAAMS,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AAEA,UAAMK,MAAM,GAAGL,OAAO,CAACA,OAAO,CAACR,MAAR,GAAiB,CAAlB,CAAtB;AACA,UAAMc,aAAa,GAAGD,MAAM,CAACT,OAAP,CAAeW,KAAf,EAAtB;;AAEA,UAAIlB,eAAe,CAACiB,aAAD,CAAf,IAAkCA,aAAa,CAACf,CAAD,CAAnD,EAAwD;AACtD;AACD;;AAED,UAAMiB,OAAO,GAAGR,OAAO,CAAC,KAAKD,KAAL,CAAWK,UAAZ,CAAvB;AACA,UAAMR,OAAO,GAAGY,OAAO,CAACZ,OAAR,CAAgBW,KAAhB,EAAhB;;AAEA,UAAIlB,eAAe,CAACO,OAAD,CAAf,IAA4BA,OAAO,CAACL,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AAED,UAAMM,IAAI,GAAG,KAAKE,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACAP,MAAAA,OAAO,CAACL,CAAD,CAAP,GAAaM,IAAb;AAEA,WAAKY,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAEA,OAAO,CAACU,MAAR,CAAe,CAAC;AACvBd,UAAAA,OAAO,EAAEA,OADc;AAEvBe,UAAAA,QAAQ,EAAE;AACRC,YAAAA,GAAG,EAAErB,CAAC,GAAG,CAAJ,GAAQ,CADL;AAERsB,YAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWxB,CAAC,GAAG,CAAf,IAAoB,CAFjB;AAGRM,YAAAA,IAAI,EAAEA;AAHE;AAFa,SAAD,CAAf,CADG;AASZM,QAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI,OATT;AAUZC,QAAAA,UAAU,EAAEJ,OAAO,CAACR;AAVR,OAAd;AAaD;;;2BAEMwB,I,EAAM;AACX,WAAKP,QAAL,CAAc;AACZL,QAAAA,UAAU,EAAEY,IADA;AAEZb,QAAAA,OAAO,EAAGa,IAAI,GAAG,CAAR,GAAa,KAAb,GAAqB;AAFlB,OAAd;AAID;;;6BAwBQ;AAAA;;AAEP,UAAMhB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMI,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA9B;AACA,UAAMI,OAAO,GAAGR,OAAO,CAAC,KAAKD,KAAL,CAAWK,UAAZ,CAAvB;AACA,UAAMa,MAAM,GAAG5B,eAAe,CAACmB,OAAO,CAACZ,OAAT,CAA9B;AAEA,UAAIsB,MAAJ;AACA,UAAIC,WAAJ;;AACA,UAAIF,MAAJ,EAAY;AACVC,QAAAA,MAAM,GAAG,aAAaD,MAAM,CAACpB,IAA7B;AACAsB,QAAAA,WAAW,GAAGF,MAAM,CAACnB,IAArB;AACD,OAHD,MAGO;AACLoB,QAAAA,MAAM,GAAG,mBAAmB,KAAKnB,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AAED,UAAMiB,KAAK,GAAGpB,OAAO,CAACqB,GAAR,CAAY,UAACL,IAAD,EAAOM,IAAP,EAAgB;AAExC,YAAMC,IAAI,GAAGD,IAAI,GACX,UAAUN,IAAI,CAACL,QAAL,CAAcd,IAAxB,GAA+B,IAA/B,GAAsCmB,IAAI,CAACL,QAAL,CAAcC,GAApD,GAA0D,GAA1D,GAAgEI,IAAI,CAACL,QAAL,CAAcE,GAA9E,GAAoF,GADzE,GAEX,YAFN;AAIA,YAAMW,iBAAiB,GAAIF,IAAI,IAAIlB,UAAnC;AAEA,eACE;AAAI,UAAA,GAAG,EAAEkB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACG,MAAL,CAAYH,IAAZ,CAAN;AAAA,WAArB;AAA8C,UAAA,SAAS,EAAEE,iBAAiB,GAAG,cAAH,GAAoB,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IADH,CADF,CADF;AAOD,OAfa,CAAd;AAiBA,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEf,OAAO,CAACZ,OAAxB;AAAiC,QAAA,WAAW,EAAEuB,WAA9C;AAA2D,QAAA,OAAO,EAAE,iBAAC5B,CAAD;AAAA,iBAAO,MAAI,CAACmC,WAAL,CAAiBnC,CAAjB,CAAP;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM2B,MAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,KAAL,CARF,CADF;AAYD;;;;EAzHcjC,KAAK,CAACwC,S","sourcesContent":["import React from 'react'\r\n\r\nclass Game extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null)\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0\r\n      };\r\n    }\r\n    handleClick(i) {\r\n      \r\n      const history = this.state.history;\r\n      \r\n      const newest = history[history.length - 1];\r\n      const newestSquares = newest.squares.slice();\r\n      \r\n      if (calculateWinner(newestSquares) || newestSquares[i]) {\r\n        return;\r\n      }\r\n      \r\n      const current = history[this.state.stepNumber];\r\n      const squares = current.squares.slice();\r\n      \r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n  \r\n      const sign = this.state.xIsNext ? 'X' : '0';\r\n      squares[i] = sign;\r\n      \r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n          selected: {\r\n            row: i % 3 + 1,\r\n            col: Math.floor(i / 3) + 1,\r\n            sign: sign\r\n          },\r\n        }]),\r\n        xIsNext: !this.state.xIsNext,\r\n        stepNumber: history.length,\r\n      });\r\n      \r\n    }\r\n    \r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) ? false : true,\r\n      });  \r\n    }\r\n    calculateWinner = () =>\r\n    {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n          ];\r\n          for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n              return {\r\n                sign: squares[a],\r\n                line: lines[i]\r\n              }\r\n            }\r\n          }\r\n          return null;\r\n    }\r\n    render() {\r\n      \r\n      const history = this.state.history;\r\n      const stepNumber = this.state.stepNumber;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n      \r\n      let status;\r\n      let winningLine;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner.sign;\r\n        winningLine = winner.line;\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\r\n      }\r\n      \r\n      const moves = history.map((step, move) => {            \r\n        \r\n        const desc = move ? \r\n              'Move ' + step.selected.sign + ' (' + step.selected.row + ',' + step.selected.col + ')':\r\n              'Game start';\r\n        \r\n        const currentlySelected = (move == stepNumber);\r\n                                   \r\n        return (\r\n          <li key={move}>\r\n            <a href=\"#\" onClick={() => this.jumpTo(move)} className={currentlySelected ? 'selectedMove' : ''}>\r\n              {desc}\r\n            </a>\r\n          </li>\r\n        );      \r\n      });\r\n      \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board squares={current.squares} winningLine={winningLine} onClick={(i) => this.handleClick(i)} />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}