{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\src\\\\components\\\\gameComponents\\\\game.js\";\nimport React from 'react';\nexport var Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.InitialState();\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"InitialState\",\n    value: function InitialState() {\n      this.setState({\n        tiles: ['', '', '', '', '', '', '', '', ''],\n        turn: 0,\n        winner: ''\n      });\n    }\n  }, {\n    key: \"reander\",\n    value: function reander() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.state.tiles.map(function (tile, pos) {\n        return React.createElement(Tile, {\n          turn: this.state.turn,\n          pmark: tile,\n          onClickFn: this.playFN,\n          cid: pos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: this.state.winner === '' ? 'winstatus' : 'winstatus visible',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Player \", this.state.turn + 1, \" Won\"), React.createElement(\"button\", {\n        onClick: this.restartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Reset\"))));\n    }\n  }, {\n    key: \"playFN\",\n    value: function playFN(element) {\n      var position;\n      var pTiles = this.state.tiles;\n\n      if (this.state.tiles[pos] === '') {\n        this.state.tiles[pos] = this.state.turn.toString();\n      } //Checkl if the user has made perfect combination\n\n\n      if (this.check(pTiles[0], pTiles[1], pTiles[2]) || this.check(pTiles[0], pTiles[3], pTiles[6]) || this.check(pTiles[1], pTiles[4], pTiles[7]) || this.check(pTiles[2], pTiles[5], pTiles[8]) || this.check(pTiles[3], pTiles[4], pTiles[5]) || this.check(pTiles[6], pTiles[7], pTiles[8]) || this.check(pTiles[2], pTiles[4], pTiles[6]) || this.check(pTiles[0], pTiles[4], pTiles[9])) {\n        this.setState(turn = this.state.turn, winner = this.state.turn.toString());\n      } else {\n        var TurnToPass = 1 - this.state.turn; // this.setState({\n        //     turn = TurnToPass\n        // })\n\n        this.setState(turn = this.state.turn, winner = this.state.turn.toString());\n      }\n    }\n  }, {\n    key: \"check\",\n    value: function check(a, b, c) {\n      return !!(a + b + c).match(/^(000|111)&/gi);\n    }\n  }, {\n    key: \"restartGame\",\n    value: function restartGame() {\n      this.InitialState();\n    }\n  }]);\n\n  return Game;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\qhunain\\Documents\\demo\\my-app\\src\\components\\gameComponents\\game.js"],"names":["React","Game","props","InitialState","setState","tiles","turn","winner","state","map","tile","pos","playFN","restartGame","element","position","pTiles","toString","check","TurnToPass","a","b","c","match","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nexport class Game extends React.Component\r\n{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.InitialState();\r\n    }\r\n    InitialState()\r\n    {\r\n        this.setState({\r\n            tiles : ['', '', '', '', '', '', '', '', '' ],\r\n            turn: 0,\r\n            winner:''\r\n        });\r\n    }\r\n    reander()\r\n    {\r\n        return (\r\n            <div className='game'>\r\n                {\r\n                    this.state.tiles.map(function(tile,pos){\r\n                        return (\r\n                            <Tile turn={this.state.turn} pmark={tile} onClickFn={this.playFN} cid={pos}></Tile>\r\n                        );\r\n                    })\r\n                }\r\n                <div className={this.state.winner === ''? 'winstatus' : 'winstatus visible'}>\r\n                    <div>\r\n                        <p>\r\n                           Player {this.state.turn + 1} Won \r\n                        </p>\r\n                        <button onClick={this.restartGame}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    playFN(element)\r\n    {\r\n        let position : element.target.id;\r\n        let pTiles = this.state.tiles;\r\n        if(this.state.tiles[pos] === '')\r\n        {\r\n            this.state.tiles[pos] = (this.state.turn).toString();\r\n        }\r\n        //Checkl if the user has made perfect combination\r\n        if(this.check(pTiles[0],pTiles[1],pTiles[2]) ||\r\n        this.check(pTiles[0],pTiles[3],pTiles[6]) ||\r\n        this.check(pTiles[1],pTiles[4],pTiles[7]) ||\r\n        this.check(pTiles[2],pTiles[5],pTiles[8]) ||\r\n        this.check(pTiles[3],pTiles[4],pTiles[5]) ||\r\n        this.check(pTiles[6],pTiles[7],pTiles[8]) ||\r\n        this.check(pTiles[2],pTiles[4],pTiles[6]) ||\r\n        this.check(pTiles[0],pTiles[4],pTiles[9])\r\n        )\r\n        {\r\n            this.setState(\r\n                turn= this.state.turn,\r\n                winner = this.state.turn.toString()\r\n                );\r\n        }\r\n        else \r\n        {\r\n            let TurnToPass = 1 - this.state.turn;\r\n            // this.setState({\r\n            //     turn = TurnToPass\r\n            // })\r\n            this.setState(\r\n                turn= this.state.turn,\r\n                winner = this.state.turn.toString()\r\n                );\r\n        }\r\n    }\r\n    check(a,b,c)\r\n    {\r\n        return !!(a+b+c).match(/^(000|111)&/gi);\r\n    }\r\n    restartGame()\r\n    {\r\n        this.InitialState();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}