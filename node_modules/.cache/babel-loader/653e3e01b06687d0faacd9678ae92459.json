{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\src\\\\components\\\\gameComponents\\\\game.js\";\nimport React from 'react';\nimport { Tile } from './tile';\nexport var Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.playFN = function (element) {\n      var pos;\n      var pTiles = _this.state.tiles;\n\n      if (_this.state.tiles[pos] === '') {\n        // let tilesProps = this.state.tiles;\n        // tilesProps[pos] = (this.state.turn).toString();\n        // this.setState({\n        //     tiles = tilesProps\n        // })\n        _this.setState({});\n\n        _this.state.tiles[pos] = _this.state.turn.toString();\n      } //Checkl if the user has made perfect combination\n\n\n      if (_this.check(pTiles[0], pTiles[1], pTiles[2]) || _this.check(pTiles[0], pTiles[3], pTiles[6]) || _this.check(pTiles[1], pTiles[4], pTiles[7]) || _this.check(pTiles[2], pTiles[5], pTiles[8]) || _this.check(pTiles[3], pTiles[4], pTiles[5]) || _this.check(pTiles[6], pTiles[7], pTiles[8]) || _this.check(pTiles[2], pTiles[4], pTiles[6]) || _this.check(pTiles[0], pTiles[4], pTiles[9])) {\n        _this.setState(_this.state.turn = _this.state.turn, _this.state.winner = _this.state.turn.toString());\n      } else {\n        var TurnToPass = 1 - _this.state.turn; // this.setState({\n        //     turn = TurnToPass\n        // })\n\n        _this.setState(_this.state.turn = _this.state.turn, _this.state.winner = _this.state.turn.toString());\n      }\n    };\n\n    _this.state = {\n      tiles: ['', '', '', '', '', '', '', '', ''],\n      turn: 0,\n      winner: ''\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"InitialState\",\n    value: function InitialState() {\n      this.setState({\n        tiles: ['', '', '', '', '', '', '', '', ''],\n        turn: 0,\n        winner: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.state.tiles.map(function (turn, tile, pos) {\n        return React.createElement(Tile, {\n          key: tile,\n          turn: turn,\n          pmark: tile,\n          clickFn: _this2.playFN,\n          cid: pos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: this.state.winner === '' ? 'winstatus' : 'winstatus visible',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Player \", this.state.turn + 1, \" Won\"), React.createElement(\"button\", {\n        onClick: this.restartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Reset\"))));\n    }\n  }, {\n    key: \"check\",\n    value: function check(a, b, c) {\n      return !!(a + b + c).match(/^(000|111)&/gi);\n    }\n  }, {\n    key: \"restartGame\",\n    value: function restartGame() {\n      this.InitialState();\n    }\n  }]);\n\n  return Game;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\qhunain\\Documents\\demo\\my-app\\src\\components\\gameComponents\\game.js"],"names":["React","Tile","Game","props","playFN","element","pos","pTiles","state","tiles","setState","turn","toString","check","winner","TurnToPass","map","tile","restartGame","a","b","c","match","InitialState","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Tile } from './tile'\r\nexport class Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tiles: ['', '', '', '', '', '', '', '', ''],\r\n            turn: 0,\r\n            winner: ''\r\n        };\r\n    }\r\n    InitialState() {\r\n        this.setState({\r\n            tiles: ['', '', '', '', '', '', '', '', ''],\r\n            turn: 0,\r\n            winner: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='game'>\r\n                {\r\n                    this.state.tiles.map( (turn, tile, pos) => \r\n                            <Tile key={tile} turn={turn} pmark={tile} clickFn={this.playFN} cid={pos} />\r\n                            )\r\n\r\n                }\r\n                <div className={this.state.winner === '' ? 'winstatus' : 'winstatus visible'}>\r\n                    <div>\r\n                        <p>\r\n                            Player {this.state.turn + 1} Won\r\n                        </p>\r\n                        <button onClick={this.restartGame}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    playFN = (element) => {\r\n        let pos: element.target.id;\r\n        let pTiles = this.state.tiles;\r\n        if (this.state.tiles[pos] === '') {\r\n            // let tilesProps = this.state.tiles;\r\n            // tilesProps[pos] = (this.state.turn).toString();\r\n            // this.setState({\r\n            //     tiles = tilesProps\r\n            // })\r\n            this.setState({})\r\n            this.state.tiles[pos] = (this.state.turn).toString();\r\n        }   \r\n        //Checkl if the user has made perfect combination\r\n        if (this.check(pTiles[0], pTiles[1], pTiles[2]) ||\r\n            this.check(pTiles[0], pTiles[3], pTiles[6]) ||\r\n            this.check(pTiles[1], pTiles[4], pTiles[7]) ||\r\n            this.check(pTiles[2], pTiles[5], pTiles[8]) ||\r\n            this.check(pTiles[3], pTiles[4], pTiles[5]) ||\r\n            this.check(pTiles[6], pTiles[7], pTiles[8]) ||\r\n            this.check(pTiles[2], pTiles[4], pTiles[6]) ||\r\n            this.check(pTiles[0], pTiles[4], pTiles[9])\r\n        ) {\r\n            this.setState(\r\n                this.state.turn = this.state.turn,\r\n                this.state.winner = this.state.turn.toString()\r\n            );\r\n        }\r\n        else {\r\n            let TurnToPass = 1 - this.state.turn;\r\n            // this.setState({\r\n            //     turn = TurnToPass\r\n            // })\r\n            this.setState(\r\n                this.state.turn = this.state.turn,\r\n                this.state.winner = this.state.turn.toString()\r\n            );\r\n        }\r\n    }\r\n    check(a, b, c) {\r\n        return !!(a + b + c).match(/^(000|111)&/gi);\r\n    }\r\n    restartGame() {\r\n        this.InitialState();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}