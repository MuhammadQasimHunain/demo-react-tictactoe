{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\src\\\\components\\\\gameComponents\\\\board.js\";\nimport React from 'react';\nexport var Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i, winning) {\n      var _this = this;\n\n      return React.createElement(Square, {\n        key: i,\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        winning: winning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var squares = [];\n\n      for (var row = 0; row < 3; row++) {\n        for (var index = row * 3; index < row * 3 + 3; index++) {\n          var winning = false;\n          var winningLine = this.props.winningLine;\n\n          if (winningLine) {\n            for (var i = 0; i < winningLine.length; i++) {\n              if (winningLine[i] == index) winning = true;\n            }\n          }\n\n          squares.push(this.renderSquare(index, winning));\n        }\n\n        rows.push(React.createElement(\"div\", {\n          key: row,\n          className: \"board-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, squares));\n        squares = [];\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", rows, \" \");\n    }\n  }]);\n\n  return Board;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\qhunain\\Documents\\demo\\my-app\\src\\components\\gameComponents\\board.js"],"names":["React","Board","i","winning","props","squares","onClick","rows","row","index","winningLine","length","push","renderSquare","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAEiBC,CAFjB,EAEoBC,OAFpB,EAE6B;AAAA;;AACvB,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAED,CAAb;AAAgB,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,OAAX,CAAmBH,CAAnB,CAAvB;AAA8C,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACE,KAAL,CAAWE,OAAX,CAAmBJ,CAAnB,CAAN;AAAA,SAAvD;AAAoF,QAAA,OAAO,EAAEC,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAJL;AAAA;AAAA,6BAMa;AACP,UAAII,IAAI,GAAG,EAAX;AACA,UAAIF,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIG,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC,CAApB,EAAuBA,GAAG,EAA1B,EAA8B;AAC5B,aAAK,IAAIC,KAAK,GAACD,GAAG,GAAC,CAAnB,EAAsBC,KAAK,GAACD,GAAG,GAAC,CAAJ,GAAM,CAAlC,EAAqCC,KAAK,EAA1C,EAA8C;AAE5C,cAAIN,OAAO,GAAG,KAAd;AACA,cAAMO,WAAW,GAAG,KAAKN,KAAL,CAAWM,WAA/B;;AACA,cAAIA,WAAJ,EAAiB;AACf,iBAAK,IAAIR,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACQ,WAAW,CAACC,MAA5B,EAAoCT,CAAC,EAArC,EAAyC;AACvC,kBAAIQ,WAAW,CAACR,CAAD,CAAX,IAAkBO,KAAtB,EACEN,OAAO,GAAG,IAAV;AACH;AACF;;AAEDE,UAAAA,OAAO,CAACO,IAAR,CAAa,KAAKC,YAAL,CAAkBJ,KAAlB,EAAyBN,OAAzB,CAAb;AACD;;AACDI,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAK,UAAA,GAAG,EAAEJ,GAAV;AAAe,UAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsCH,OAAtC,CAAV;AACAA,QAAAA,OAAO,GAAG,EAAV;AACD;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOE,IAAP,MAAP;AAED;AA7BL;;AAAA;AAAA,EAA2BP,KAAK,CAACc,SAAjC","sourcesContent":["import React from 'react'\r\nexport class Board extends React.Component {\r\n  \r\n    renderSquare(i, winning) {\r\n      return <Square key={i} value={this.props.squares[i]} onClick={() => this.props.onClick(i)} winning={winning}/>;\r\n    }\r\n    \r\n    render() {\r\n      var rows = [];\r\n      let squares = [];\r\n      for (var row=0; row<3; row++) {\r\n        for (var index=row*3; index<row*3+3; index++) {\r\n          \r\n          let winning = false;\r\n          const winningLine = this.props.winningLine;\r\n          if (winningLine) {\r\n            for (var i=0; i<winningLine.length; i++) {\r\n              if (winningLine[i] == index)\r\n                winning = true;\r\n            }\r\n          }\r\n          \r\n          squares.push(this.renderSquare(index, winning));\r\n        }    \r\n        rows.push(<div key={row} className=\"board-row\">{squares}</div>);\r\n        squares = [];\r\n      }\r\n      \r\n      return <div> {rows} </div>;\r\n      \r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}