{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\qhunain\\\\Documents\\\\demo\\\\my-app\\\\src\\\\components\\\\gameComponents\\\\Game.js\";\nimport React from 'react';\nimport './';\nexport var Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game() {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this));\n    _this.state = INIT_STATE;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        playerIsNext: step % 2 ? false : true,\n        winner: null\n      });\n    }\n  }, {\n    key: \"resetGame\",\n    value: function resetGame(player) {\n      this.setState(_objectSpread({}, INIT_STATE, {\n        player: player\n      }));\n    }\n  }, {\n    key: \"setPlayer\",\n    value: function setPlayer(player) {\n      this.setState({\n        player: player\n      });\n    }\n  }, {\n    key: \"setMove\",\n    value: function setMove(i) {\n      var _this$state = this.state,\n          stepNumber = _this$state.stepNumber,\n          player = _this$state.player,\n          playerIsNext = _this$state.playerIsNext,\n          winner = _this$state.winner;\n      var history = this.state.history.slice(0, stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (winner || squares[i]) {\n        return;\n      }\n\n      var opponent = player === 'X' ? 'O' : 'X';\n      squares[i] = playerIsNext ? player : opponent;\n      var hasEmptyIndex = squares.some(function (s) {\n        return s != \"O\" && s != \"X\";\n      }); // was there a winner or an even?\n\n      var nextWinner = calculateWinner(squares);\n\n      if (!nextWinner && !hasEmptyIndex) {\n        nextWinner = \"-\";\n      }\n\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        stepNumber: history.length,\n        playerIsNext: !playerIsNext,\n        winner: nextWinner\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var _this$state2 = this.state,\n          playerIsNext = _this$state2.playerIsNext,\n          winner = _this$state2.winner;\n\n      if (playerIsNext && !winner) {\n        this.setMove(i);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          history = _this$state3.history,\n          stepNumber = _this$state3.stepNumber,\n          playerIsNext = _this$state3.playerIsNext,\n          player = _this$state3.player,\n          winner = _this$state3.winner;\n      var current = history[stepNumber];\n\n      if (winner) {\n        // there was a winner, reset the game\n        // or no more moves! game over!\n        // restart game anyway\n        setTimeout(function () {\n          _this2.resetGame(player);\n        }, 2000);\n      } else if (!playerIsNext) {\n        // now the computer has to play in a sec\n        var emptyIndex = 0;\n        var hasEmptyIndex = current.squares.some(function (s, idx) {\n          if (s != \"O\" && s != \"X\") {\n            emptyIndex = idx;\n            return true;\n          }\n\n          ;\n        });\n\n        if (!hasEmptyIndex) {\n          // no more moves! game over!\n          console.log('kind of error, no more moves! game over!');\n        } else {\n          // computer's move in 2 secs\n          var computer = player === \"X\" ? \"O\" : \"X\";\n          var bestMove = calcMinimax(current.squares, computer, player, computer);\n          setTimeout(function () {\n            _this2.setMove(bestMove);\n          }, 500);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Tic Tac Toe\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"A React Game, not unbeatable\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ChoosePlayer, {\n        player: player,\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this2.setPlayer(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Board, {\n        player: player,\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(GameInfo, {\n        stepNumber: stepNumber,\n        player: player,\n        playerIsNext: playerIsNext,\n        history: history,\n        winner: winner,\n        onClick: function onClick(move) {\n          return _this2.jumpTo(move);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\qhunain\\Documents\\demo\\my-app\\src\\components\\gameComponents\\Game.js"],"names":["React","Game","state","INIT_STATE","step","setState","stepNumber","playerIsNext","winner","player","i","history","slice","current","length","squares","opponent","hasEmptyIndex","some","s","nextWinner","calculateWinner","concat","setMove","setTimeout","resetGame","emptyIndex","idx","console","log","computer","bestMove","calcMinimax","setPlayer","handleClick","move","jumpTo","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {} from './'\r\nexport class Game extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = INIT_STATE;\r\n    }\r\n   \r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        playerIsNext: (step % 2) ? false : true,\r\n        winner: null,\r\n      });\r\n    }\r\n    \r\n    resetGame(player) {\r\n      this.setState({ ...INIT_STATE, player: player });\r\n    }\r\n  \r\n    setPlayer(player) {\r\n      this.setState({\r\n        player: player,\r\n      });\r\n    }\r\n    \r\n    setMove(i) {\r\n      const { stepNumber, \r\n             player, \r\n             playerIsNext,\r\n             winner\r\n      } = this.state;\r\n      \r\n      const history = this.state.history.slice(0, stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n  \r\n      if (winner || squares[i]) {\r\n        return;\r\n      }\r\n      \r\n      const opponent = (player === 'X') ? 'O' : 'X';\r\n      squares[i] = playerIsNext ? player : opponent;\r\n  \r\n      const hasEmptyIndex = squares.some( (s) => { return (s != \"O\" && s != \"X\") } );\r\n      \r\n      // was there a winner or an even?\r\n      let nextWinner = calculateWinner(squares);\r\n      \r\n      if (!nextWinner && !hasEmptyIndex) {\r\n        nextWinner = \"-\";\r\n      }\r\n      \r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares\r\n        }]),\r\n        stepNumber: history.length,\r\n        playerIsNext: !playerIsNext,\r\n        winner: nextWinner,\r\n      });\r\n      \r\n    }\r\n    \r\n    handleClick(i) {\r\n      const { \r\n        playerIsNext,\r\n        winner\r\n      } = this.state;\r\n  \r\n      if (playerIsNext && !winner) {\r\n        this.setMove(i);\r\n      }\r\n      \r\n    }\r\n      \r\n    render() {\r\n      const { \r\n        history, \r\n        stepNumber,\r\n        playerIsNext,\r\n        player,\r\n        winner\r\n      } = this.state;\r\n  \r\n      const current = history[stepNumber];  \r\n      \r\n      if (winner) {\r\n        // there was a winner, reset the game\r\n        // or no more moves! game over!\r\n        // restart game anyway\r\n        setTimeout(() => {this.resetGame(player)}, 2000);      \r\n      } else if (!playerIsNext) {\r\n        \r\n        // now the computer has to play in a sec\r\n        let emptyIndex = 0;\r\n        const hasEmptyIndex = current.squares.some( (s,idx) => {\r\n          if (s != \"O\" && s != \"X\") { \r\n            emptyIndex = idx; \r\n            return true;\r\n          };\r\n        } );\r\n        if (!hasEmptyIndex) {\r\n          // no more moves! game over!\r\n          console.log('kind of error, no more moves! game over!');\r\n        } else {\r\n          // computer's move in 2 secs\r\n          const computer = player===\"X\"?\"O\":\"X\";\r\n          const bestMove = calcMinimax(current.squares, computer, player, computer);\r\n  \r\n          setTimeout(() => {this.setMove(bestMove)}, 500);  \r\n        }\r\n        \r\n      }\r\n      \r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"game-title\">\r\n            <h3>Tic Tac Toe\r\n            </h3>\r\n              <small>A React Game, not unbeatable</small>\r\n          </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              <ChoosePlayer \r\n                player={player}\r\n                squares={current.squares}\r\n                onClick={(i) => this.setPlayer(i)}\r\n              />\r\n              <Board \r\n                player={player}\r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}\r\n              />\r\n  \r\n          </div>\r\n          <div className=\"row\">\r\n              <GameInfo\r\n                stepNumber={stepNumber}\r\n                player={player}\r\n                playerIsNext={playerIsNext}\r\n                history={history}\r\n                winner={winner}\r\n                onClick={(move) => this.jumpTo(move)}\r\n                />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}